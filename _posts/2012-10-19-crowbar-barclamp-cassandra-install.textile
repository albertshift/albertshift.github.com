---
layout: post
title: Installation of the Cassandra by DELL Crowbar
---

h1. {{ page.title }}

p(meta). 19 Oct 2012 - Moscow

This is an installation and configuration guide for Apache Cassandra by using DELL Crowbar unboxer.

DELL Crowbar is an opensource framework that has plugins called barclamps that installs and configures software on physical machines. I have written the "barclamp_cassandra":https://github.com/shvid/barclamp-cassandra for Apache Cassandra installation and configuration by means Crowbar Barclamps. Let's consider steps for quick installation of Cassandra on your environment.

**1. Crowbar ISO generation**

First step is the ISO generation that will contains all barclamps included in this process. You could manage barclamps as sub modules for Crowbar and add/remove some of them. This ISO will cache all packages and files needs for barclamps and all machines will install OS and packages from this ISO. 
In order to start building ISO go to this "page":https://github.com/dellcloudedge/crowbar/wiki/Build-Crowbar.ISO that describes how to start this process, and then add barclamp_cassandra submodule by running commands:

bc. sudo apt-get install git
git clone https://github.com/shvid/barclamp-cassandra.git ~/crowbar/barclamps/cassandra
nano ~/crowbar/.gitmodules

Insert text:

bc. [submodule "barclamps/cassandra"]
       path = barclamps/cassandra
       url = git clone https://github.com/shvid/barclamp-cassandra.git

After that you need to build ISO containing barclamp_cassandra and all dependencies needed for it. Crowbar will automatically download packages and put them into ISO file.

bc. cd ~/crowbar
./build_crowbar.sh ubuntu-12.04 --update-cache

You could run it without "--update-cache" later.

**2. Crowbar Installation**

In this step, please, select how you will install Crowbar on machines.
DELL Crowbar needs at least one machine for an admin node and some machines for working nodes.
You could use KVM for virtualization in case there is only one physical machine.
For KVM virtualization one should define interfaces in the following way:

bc.. # The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet manual
        up ifconfig $IFACE 0.0.0.0 up
        up ifconfig $IFACE promisc

auto eth1
iface eth1 inet manual
        up ifconfig $IFACE 0.0.0.0 up
        up ifconfig $IFACE promisc

auto br0
iface br0 inet dhcp
        bridge_ports eth0
        bridge_fd 9
        bridge_hello 2
        bridge_maxage 12
        bridge_stp off
      
bc. 
 
You could use the "test_framework":https://github.com/dellcloudedge/crowbar/tree/master/test_framework which is a part of Crowbar to deploy nodes on KVM by running the command below:

bc. cd ~/crowbar
./test_framework/test_crowbar.sh single cassandra pause develop-mode use-iso crowbar-v1.3-openstack-78-g82f8aaf-dev.iso
 
Your ISO file name could be different, the command "./build_crowbar.sh ubuntu-12.04 --update-cache" ran previously will show you the exact name. 
 
Otherwise, if you intend to install Crowbar on the pool of physical machines, please, take a look at this "article":https://github.com/dellcloudedge/crowbar/wiki/Install-crowbar.

**3. Cassandra Installation**

If the previous steps have been successfully performed barclamp_cassandra is available in your admin node. Select Cassandra from the list of barclamps below: 

!{width: 1000px;}/images/2012-10-19/1.jpg! 

On clicking the link "Cassandra" you will see a new proposal creation form. In this form you could change the name of a new proposal.

!{width: 1000px;}/images/2012-10-19/2.jpg! 

On clicking the button "Create" you will see the page with proposal's editing settings.

!{width: 1000px;}/images/2012-10-19/3.jpg! 

The most important setting is "Cluster Name". By default it has "Test Cluster" value which is better to be changed initially (in the proposal creation step). Cluster Name are used by nodes to join together into a cluster. Additionally Cassandra creates persistent directories with Cluster Name mark. If you change Cluster Name later, barclamp Cassandra will erase data directories associated with the previous Cluster Name to avoid data version conflicts. You can change data directories paths to keep data for the previous Cluster Name while editing the proposal.

Other important settings are: 
 - Storage Port;
 - SSL Storage Port;
 - RPC Port;
 - JMX Port.
 
All those settings are important for port customization. Cassandra uses admin interface for binding Storage Port and SSL Storage Port. The default admin interface for Crowbar is 192.168.124.0. Cassandra nodes communicate through each other by this interface in cluster. Otherwise, RPC and JMX Ports have to be accessible from other networks, and Cassandra uses 0.0.0.0 address assignable to all interfaces to bind them. RPC Port is used by Thrift external programs and JMX Port is used by monitoring tools.

Data directories are used to place Cassandra data files to different HDD drives if need:
 - Saved Caches Directory;
 - Commitlog Directory;
 - Data File Directories.

The last setting "Data File Directories" could have comma separated directories.

You can change all rest settings to customize Cassandra for your needs.

At the end of the proposal's edit page we need to select machines where we will install Cassandra instances.
 
!{width: 1000px;}/images/2012-10-19/4.jpg! 

This is a drag-n-drop interface and we can use mouse to add/remove machines for the role 'cassandra-server'.

At the end we need to click "Apply" button and we will see success message.

!{width: 1000px;}/images/2012-10-19/5.jpg! 

Cassandra installed by Crowbar.

**4. Cassandra installed**

After Cassandra installation you can go to the first machine where Cassandra has been installed and run

bc. nodetool ring 

This command will show you the Cassandra's ring of the nodes. The initial_tokens are calculated by barclamp_cassandra by using this ruby program:

bc.. 

#!/usr/bin/env ruby

if ARGV.size >= 1 then
    num=ARGV[0].to_i
else
    print "How many nodes are in your cluster? "
    num = gets.to_i
end

exit if num == 0

(0..num).each do |i|
    t = i * (2**127) / num
    print "token " + i.to_s + ": " + t.to_s + "\n"
end

p. 

In case if you will add new nodes by editing proposal the barclamp_cassandra will recalculate initial_tokens only in case of new Cluster Name. In other cases barclamp_cassandra will use empty initial_tokens and initialize them from persistent data on directories. New instances will take place in ring by Cassandra's algorithm.

Make sure that for new cluster name barclamp_cassandra will remove all data in directories "Saved Caches Directory, Commitlog Directory, Data File Directories" by command
"rm -rf *" in order to have clear space for new cluster, old data will be lost

